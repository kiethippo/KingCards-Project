<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>